# -*- coding: utf-8 -*-
"""LDM-PIR MRI .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EMqx8C7PeRID5q0EKlBAnHPbmRf1Jsjx
"""

# Commented out IPython magic to ensure Python compatibility.
# %%capture
# pip install git+https://github.com/matthieutrs/ram

import deepinv as dinv

# run on cpu (Colab doesn't have GPU by default)
device = 'cpu'

# load MRI image
url = "https://raw.githubusercontent.com/rajavavek/Project-Data/main/MRI_of_Human_Brain.jpg"
x = dinv.utils.load_url_image(url=url, img_size=256).to(device)

# create forward operator
physics = dinv.physics.Inpainting(tensor_size=(3, 256, 256), mask=.5,
                                  noise_model=dinv.physics.GaussianNoise(.05), device=device)

# generate measurement
y = physics(x)

# plot
dinv.utils.plot([x, y], ["Original", "Measurement"])

from ram import RAM


# Load the pretrained model
model = RAM(device=device)

# run inference
x_hat = model(y, physics=physics)

# plot
dinv.utils.plot([x, y, x_hat], ["Original", "Measurement", "Reconstruction"])

from ram import finetune

physics = dinv.physics.Demosaicing(img_size=(256, 256), noise_model=dinv.physics.GaussianNoise(.05))

y = physics(x)

# run zero-shot inference
x_zero_shot = model(y, physics=physics)

# use a GPU for faster finetuning
# we only finetune for 1 gradient steps here due to CPU speed constraints
model = finetune(model, y, physics, max_iter=1, noise_loss='SURE', transform='shift', device=device)

# run inference
x_finetuned = model(y, physics=physics)

# compute PSNR
zero_shot_psnr = dinv.metric.PSNR()(x, x_zero_shot).item()
finetuned_psnr = dinv.metric.PSNR()(x, x_finetuned).item()

print(f"PSNR zero-shot {zero_shot_psnr:2f} dB, finetuned {finetuned_psnr:2f} dB")

# plot
dinv.utils.plot([x, y, x_zero_shot, x_finetuned], ["Original", "Measurement", "Zero-Shot", "Finetuned"])